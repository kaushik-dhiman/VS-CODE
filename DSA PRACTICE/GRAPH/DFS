

class Solution {
  public:
    
    void DFS(int i, unordered_map<int, bool>& vis, vector<int> adj[], vector<int>& ans)
    {
        ans.push_back(i);
        vis[i] = true;
        
        for(auto x:adj[i])
        {
            if(!vis[x])
                DFS(x,vis,adj,ans);
        }
        
    }
  
    
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        vector<int> ans;
        unordered_map<int, bool> vis;

        //for disconnected graph we use this loop
        for(int i = 0; i < V; i++)
            if(!vis[i])
                DFS(i,vis,adj,ans);
        return ans;
    }
};